# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
        mysql database: 'mr_math' # Optional, default value is "test". The specified database which will be create
        mysql root password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
        # mysql user: ${{ secrets.DatabaseUser }} # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
        # mysql password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"
  
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Copy env
      run: |
        touch .env
        echo -e "DOMAIN=test\nHOST=127.0.0.1\nBACKEND_PORT=5000\nDB_ACCOUNT=${{ secrets.DatabaseUser }}\nDB_PASSWORD=${{ secrets.DatabasePassword }}\nDB_HOST=localhost\nDB_PORT=3306\nSCHEMA_NAME=mr_math\nENV=develop\nSECRET_KEY=f166b8694416a3f5a73a9273c3f287db" >> .env
        ls -al
  
    # - name: Run sead
    #   run: |
    #     python ./initial_db.py

    # - name: Test with pytest
    #   run: |
    #     pytest -W ignore ./tests/unit
      
    - name: Deploy to server
      uses: easingthemes/ssh-deploy@v2
      with:
        REMOTE_HOST : ${{ secrets.SERVER_IP }}
        REMOTE_USER : ${{ secrets.SERVER_USER }}
        SSH_PRIVATE_KEY : ${{ secrets.SSH_PRIVATE_KEY }}
        TARGET: ${{ secrets.REMOTE_PATH }}
        EXCLUDE: ".env, /app/seeds/__pycache__/, /app/generators/__pycache__/"
